<div class="room-header-list">
  <div class="room-header">
    <div class="room_header_left">
      <%= link_to "/room/joined" do %><div class="room_back"><i class="fa-solid fa-angle-left"></i></div><% end %>
      <div class="room_title"><%= @room.name %></div>
    </div>
    <div class="room_header_right">
      <%= link_to edit_room_path(params[:id]) do %>
        <i class="fa-solid fa-caret-down"></i>
      <% end %>
    </div>
    <%= link_to "ルームから退室する", room_leave_path(@room.id), data: {turbo_method: :delete} %>
  </div>
<div id="message-notice"></div>
</div>


<p id="notice"><%= notice %></p>

<div class="room-content">
<div id="data" data-room-id="<%= @room.id %>" data-user-id="<%= @current_user.id %>"></div>
<%= render "messages", messages: @messages %>
  <% @members.each do |member| %>
    <% @joiner = User.find_by(id: member.user_id) %>
    <div id="user-data" user-data-id="<%= @joiner.id %>"></div>
    <%= @joiner.name %>
    <% @status = @joiner.status ? "online":nil %>
        <span class="user-status <%= @status %> user-<%= @joiner.id %>-status">
          ・
        </span>
  <% end %>


<div id="dummy-margin" class="dummy-margin"></div>

<%= form_with url: create_message_path(params[:id]), model: @message, local: true do |f| %>
  <div class="message-form">
    <div class="message-textarea">
      <div id="dummy-textarea" class="dummy-textarea" aria-hidden="true"></div>
      <%= f.text_area :sentence, id: "message-sentence", class: "message-sentense-class", :placeholder => "メッセージを送信する" %>
    </div>
    <input type="submit" name="commit" value="" id="message-submit" class="message-submit">
    <p id="helper-text" style="color: red;"></p>
  </div>
<% end %>

<script type="text/javascript">
  document.addEventListener("turbo:load", () => {
    const input = document.querySelector("#message-sentence");
    const button = document.querySelector("#message-submit");
    const p = document.querySelector("#helper-text");
    const chatRegex = /[^\s\R]/;
    var textCount = 2000;

    button.disabled = true;
    input.addEventListener("keyup", () => {
      var count1 = input.value.length
      if(chatRegex.test(input.value)){
        button.disabled = false;
        $('.message-submit').css('opacity', '1.0');
      }else{
        button.disabled = true;
        $('.message-submit').css('opacity', '0.2');
      };

      if(count1 >= textCount){
        button.disabled = true;
        $('.message-sentense-class:focus').css('box-shadow','0 0 0 4px rgba(234, 57, 33, 0.3)');
      }else{
        $('.message-sentense-class:focus').css('box-shadow','0 0 0 4px rgba(35, 167, 195, 0.3)');
      };
    });
  });
</script>
<script type="text/javascript">
  document.addEventListener("turbo:load", () => {
    $(window).on('scroll', function (){
      var elem = $('.message-one');
        var elemOffset = elem.last().offset().top;
        var scrollPos = $(window).scrollTop();
        var wh = $(window).height();

        if(scrollPos >= elemOffset - wh){
          document.getElementById('message-notice').textContent = "";
        }

    });
  });
</script>

<script type="text/javascript">
  document.addEventListener("turbo:load", () => {
    var butotn = document.getElementById('message-notice');
    butotn.onclick = function() {
      window.scrollTo(0, document.body.scrollHeight);
    }
  });
</script>
</div>
